#pragma once

typedef char TCHAR;

TCHAR g_frozenLyric_easy[][13] = {
	"Snow", "White", "Mountain", "Tonight",	// 1
	"Not", "Footprint", "To", "Seen",

	"Kingdom", "Isolation",		// 2
	"And", "Looks", "Like", "I'm", "Queen",

	"Wind", "Howling", "Like", "Swirling", "Storm", "Inside",	// 3
	"Couldn't", "Keep", "In", "Heaven", "I've", "Tried",

	"Don't", "Let", "In", "Don't", "Let", "See",	// 4
	"Be", "Good", "Girl", "Always", "Have", "Be",
	"Conceal", "Don't", "Feel", "Don't", "Them", "Know",
	"Well", "Now", "They", "Know",

	"Let", "It", "Go", "Let", "It", "Go",		// 5
	"Can't", "Hold", "Back", "Anymore",
	"Let", "It", "Go", "Let", "It", "Go",
	"Turn", "Away", "Slam", "Door",

	"I", "Don't", "Care", "What", "Going", "To", "Say",		// 6
	"Let", "Storm", "Rage", "On",
	"Cold", "Never", "Bothered", "Anyway",

	"Funny", "How", "Distance", "Makes", "Everything", "Small",	// 7
	"And", "Fears", "Once", "Controlled", "Me",
	"Can't", "Get", "Me", "At", "All",

	"Time", "To", "See", "What", "Can", "Do",		// 8
	"Test", "The", "Limits", "Break", "Through",
	"Right", "Wrong", "Rules", "For", "Me",
	"I'm", "Free",

	"Let", "It", "Go", "Let", "It", "Go",		// 9
	"One", "With", "Wind", "Sky",
	"Let", "It", "Go", "Let", "It", "Go",
	"Never", "See", "Me", "Cry",
	"Here", "I'll", "Stand", "Here", "I'll", "Stay",
	"Let", "Storm", "Rage", "On",

	"Power", "Flurries", "Through", "Air", "Ground",	// 10
	"Soul", "Spiraling", "In", "Frozen", "Fractals", "Around",
	"And", "Thought", "Crystallizes", "Like", "Icy", "Blast",
	"I'm", "Never", "Going", "Back",
	"Past", "Is", "In", "Past",

	"Let", "It", "Go", "Let", "It", "Go",		// 11
	"I'll", "Rise", "Like", "Break", "Dawn",
	"Let", "It", "Go", "Let", "It", "Go",
	"That", "Perfect", "Girl", "Gone",

	"Here", "I", "Stand", "In", "Light", "Day",		// 12
	"Let", "Storm", "Rage", "On",
	"Cold", "Never", "Bothered", "Anyway",
};

// 단어와 단어 사이 간격(시간)
double g_forzenDropTime_easy[] = {
	14.41, 15.19, 16.10, 16.48, // 1
	17.48, 17.87, 18.85, 19.26,

	21.35, 22.01,		// 2
	24.45, 24.83, 25.13, 26.00, 26.35,

	29.00, 29.88, 30.85,		// 3
	31.55, 32.60, 33.05,
	35.80, 36.20, 36.85, 37.43, 38.40, 39.01,

	42.80, 43.20, 43.88, 44.44, 44.80, 45.50,		//4
	46.32, 46.72, 46.96, 47.68, 48.23, 49.11,
	49.80, 50.41, 50.87, 51.50, 52.23, 52.65,
	56.00, 56.32, 56.75, 57.33,

	59.30, 59.57, 59.73, 61.10, 61.26, 61.55,		// 5
	62.98, 63.45, 63.87, 64.28,
	66.36, 66.52, 66.78, 68.03, 68.25, 68.49,
	69.81, 70.1, 70.94, 72.16,

	73.97, 74.59, 75.25, 76.56, 77.45, 78.04, 78.65,		// 6
	80.50, 80.84, 81.50, 82.20,
	84.45, 84.85, 85.33, 86.00,

	91.90, 92.33, 93.03,		// 7
	94.54, 94.97, 96.34,
	98.01, 98.45, 99.19, 99.60, 100.63,
	101.50, 101.96, 102.64, 103.07, 103.55,

	106.15, 106.60, 107.03, 107.50, 108.30, 108.75,		// 8
	109.70, 110.10, 110.50, 111.84, 112.50,
	113.20, 114.00, 114.92, 115.35, 115.53,
	117.12, 117.50,

	120.60, 120.80, 121.00, 122.40, 122.58, 122.80,		// 9
	124.58, 125.00, 125.48, 126.20,
	127.60, 127.88, 128.06, 129.30, 129.54, 129.80,
	131.57, 132.35, 132.95, 133.48,
	135.25, 135.90, 136.49, 138.80, 139.50, 140.15,
	141.80, 142.28, 142.90, 143.59,

	153.43, 154.30,		// 10
	155.20, 156.10, 157.84,
	160.54, 161.40,
	162.65, 163.12, 163.98, 165.36,
	167.20, 167.90, 168.50, 170.10, 171.00, 171.64,
	174.18, 174.60, 175.30, 176.13,
	177.30, 177.70, 178.00, 178.85,

	181.90, 182.13, 182.30, 183.70, 183.92, 184.15,		// 11
	185.65, 185.95, 186.34, 186.88, 187.50,
	189.00, 189.20, 189.40, 190.70, 190.90, 191.10,
	192.65, 192.98, 193.70, 194.88,

	196.55, 197.34, 197.83, 199.20, 200.10, 201.30,		// 12
	204.93, 205.31, 206.00, 206.55,
	210.70, 211.09, 211.50, 212.26,
};

// 각 단어의 세션(x좌표)
int g_xPosOfDroplings_FROZEN_easy[] = {
	0, 1, 2, 3,	//	1
	1, 2, 3, 4,

	0, 1,		// 2
	1, 2, 3, 4, 5,

	0, 1, 2, 3, 4, 5,	// 3
	1, 2, 3, 4, 5, 6,

	0, 1, 2, 3, 4, 5,	// 4
	1, 2, 3, 4, 5, 6,
	0, 1, 2, 3, 4, 5,
	1, 2, 3, 4,

	0, 1, 2, 3, 4, 5,		// 5
	1, 2, 3, 4,
	0, 1, 2, 4, 5, 6,
	1, 2, 3, 4,

	0, 1, 2, 3, 4, 5, 6,	// 6
	0, 1, 2, 3,
	1, 2, 3, 4,

	0, 1, 2, 3, 4, 5,	// 7
	0, 1, 2, 3, 4,
	1, 2, 3, 4, 5,

	0, 1, 2, 3, 4, 5,	// 8
	1, 2, 3, 4, 5,
	0, 1, 2, 3, 4,
	2, 4,

	0, 1, 2, 4, 5, 6,		// 9
	1, 2, 3, 4,
	0, 1, 2, 4, 5, 6,
	1, 2, 3, 4,
	0, 1, 2, 3, 4, 5,
	1, 2, 3, 4,

	0, 1, 2, 3, 4,	// 10
	0, 1, 2, 3, 4, 5,
	0, 1, 2, 3, 4, 5,
	0, 1, 2, 3,
	1, 2, 3, 4,

	0, 1, 2, 3, 4, 5,		// 11
	0, 1, 2, 3, 4,
	0, 1, 2, 4, 5, 6,
	1, 2, 3, 4,

	0, 1, 2, 3, 4, 5,	// 12
	0, 1, 2, 3,
	1, 2, 3, 4,
};